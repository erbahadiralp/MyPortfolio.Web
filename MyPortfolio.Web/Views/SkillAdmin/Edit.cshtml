@model MyPortfolio.Web.Models.Entities.Skill

@{
    ViewData["Title"] = "Yetenek Güncelle";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    var categories = (SelectList)ViewBag.Kategoriler;
}

<br />
<h4>Yetenek Düzenleme Sayfası</h4>
<hr />

<form asp-action="Edit" method="post">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <input type="hidden" asp-for="Id" />
    <div class="form-group">
        <label asp-for="Name_tr" class="control-label">Yetenek Adı (TR)</label>
        <input asp-for="Name_tr" class="form-control" />
        <span asp-validation-for="Name_tr" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Name_en" class="control-label">Yetenek Adı (EN)</label>
        <input asp-for="Name_en" class="form-control" />
        <span asp-validation-for="Name_en" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label for="CategorySelector" class="control-label">Kategori</label>
        <select id="CategorySelector" class="form-control" asp-items="categories">
            <option value="">Kategori Seçin</option>
        </select>
        <span asp-validation-for="Category_tr" class="text-danger"></span>
    </div>
    
    <input type="hidden" asp-for="Category_tr" />
    <input type="hidden" asp-for="Category_en" />

    <br />
    <div class="form-group">
        <input type="submit" value="Güncelle" class="btn btn-primary" />
        <a asp-action="Index" class="btn btn-secondary">Listeye Geri Dön</a>
    </div>
</form>

@section Scripts {
    <script>
        $(document).ready(function() {
            var categoriesData = @Html.Raw(Json.Serialize(categories.Select(c => new { Value = c.Value, Text = c.Text })));
            var initialCategoryEn = "@Model.Category_en";

            function setCategoryFields(selectedValue) {
                var selectedCategory = categoriesData.find(c => c.value === selectedValue);
                if (selectedCategory) {
                    var parts = selectedCategory.text.split(' / ');
                    $('#Category_tr').val(parts[0].trim());
                    $('#Category_en').val(parts[1].trim());
                } else {
                    $('#Category_tr').val('');
                    $('#Category_en').val('');
                }
            }

            // Set initial value
            if (initialCategoryEn) {
                $('#CategorySelector').val(initialCategoryEn);
            }

            // Bind change event
            $('#CategorySelector').change(function() {
                var selectedValue = $(this).val();
                setCategoryFields(selectedValue);
            });
        });
    </script>
}